//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Lottery.LotteryServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LotteryServiceReference.ILotteryService")]
    public interface ILotteryService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatService/SendMessage")]
        void SendMessage(string message);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatService/SendMessage")]
        System.Threading.Tasks.Task SendMessageAsync(string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendService/SendRequestFriendship", ReplyAction="http://tempuri.org/IFriendService/SendRequestFriendshipResponse")]
        void SendRequestFriendship(int targetUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendService/SendRequestFriendship", ReplyAction="http://tempuri.org/IFriendService/SendRequestFriendshipResponse")]
        System.Threading.Tasks.Task SendRequestFriendshipAsync(int targetUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendService/AddFriend", ReplyAction="http://tempuri.org/IFriendService/AddFriendResponse")]
        void AddFriend(int friendshipRequestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendService/AddFriend", ReplyAction="http://tempuri.org/IFriendService/AddFriendResponse")]
        System.Threading.Tasks.Task AddFriendAsync(int friendshipRequestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendService/RemoveFriend", ReplyAction="http://tempuri.org/IFriendService/RemoveFriendResponse")]
        void RemoveFriend(int friendUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendService/RemoveFriend", ReplyAction="http://tempuri.org/IFriendService/RemoveFriendResponse")]
        System.Threading.Tasks.Task RemoveFriendAsync(int friendUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/StartGame", ReplyAction="http://tempuri.org/IGameService/StartGameResponse")]
        void StartGame();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/StartGame", ReplyAction="http://tempuri.org/IGameService/StartGameResponse")]
        System.Threading.Tasks.Task StartGameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/UpdateGameSettings", ReplyAction="http://tempuri.org/IGameService/UpdateGameSettingsResponse")]
        void UpdateGameSettings();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/UpdateGameSettings", ReplyAction="http://tempuri.org/IGameService/UpdateGameSettingsResponse")]
        System.Threading.Tasks.Task UpdateGameSettingsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/GetScoreboard", ReplyAction="http://tempuri.org/IGameService/GetScoreboardResponse")]
        void GetScoreboard();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/GetScoreboard", ReplyAction="http://tempuri.org/IGameService/GetScoreboardResponse")]
        System.Threading.Tasks.Task GetScoreboardAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyService/CreateLobby", ReplyAction="http://tempuri.org/ILobbyService/CreateLobbyResponse")]
        string CreateLobby();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyService/CreateLobby", ReplyAction="http://tempuri.org/ILobbyService/CreateLobbyResponse")]
        System.Threading.Tasks.Task<string> CreateLobbyAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyService/JoinLobby", ReplyAction="http://tempuri.org/ILobbyService/JoinLobbyResponse")]
        void JoinLobby(string lobbyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyService/JoinLobby", ReplyAction="http://tempuri.org/ILobbyService/JoinLobbyResponse")]
        System.Threading.Tasks.Task JoinLobbyAsync(string lobbyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/LoginUser", ReplyAction="http://tempuri.org/IAuthenticationService/LoginUserResponse")]
        bool LoginUser(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/LoginUser", ReplyAction="http://tempuri.org/IAuthenticationService/LoginUserResponse")]
        System.Threading.Tasks.Task<bool> LoginUserAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/LogoutUser", ReplyAction="http://tempuri.org/IAuthenticationService/LogoutUserResponse")]
        void LogoutUser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/LogoutUser", ReplyAction="http://tempuri.org/IAuthenticationService/LogoutUserResponse")]
        System.Threading.Tasks.Task LogoutUserAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/RegisterUser", ReplyAction="http://tempuri.org/IUserService/RegisterUserResponse")]
        int RegisterUser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/RegisterUser", ReplyAction="http://tempuri.org/IUserService/RegisterUserResponse")]
        System.Threading.Tasks.Task<int> RegisterUserAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/RegisterGuest", ReplyAction="http://tempuri.org/IUserService/RegisterGuestResponse")]
        int RegisterGuest();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/RegisterGuest", ReplyAction="http://tempuri.org/IUserService/RegisterGuestResponse")]
        System.Threading.Tasks.Task<int> RegisterGuestAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ChangePassword", ReplyAction="http://tempuri.org/IUserService/ChangePasswordResponse")]
        void ChangePassword(string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ChangePassword", ReplyAction="http://tempuri.org/IUserService/ChangePasswordResponse")]
        System.Threading.Tasks.Task ChangePasswordAsync(string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/RecoverPassword", ReplyAction="http://tempuri.org/IUserService/RecoverPasswordResponse")]
        void RecoverPassword(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/RecoverPassword", ReplyAction="http://tempuri.org/IUserService/RecoverPasswordResponse")]
        System.Threading.Tasks.Task RecoverPasswordAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateProfile", ReplyAction="http://tempuri.org/IUserService/UpdateProfileResponse")]
        void UpdateProfile();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateProfile", ReplyAction="http://tempuri.org/IUserService/UpdateProfileResponse")]
        System.Threading.Tasks.Task UpdateProfileAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILotteryServiceChannel : Lottery.LotteryServiceReference.ILotteryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LotteryServiceClient : System.ServiceModel.ClientBase<Lottery.LotteryServiceReference.ILotteryService>, Lottery.LotteryServiceReference.ILotteryService {
        
        public LotteryServiceClient() {
        }
        
        public LotteryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LotteryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LotteryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LotteryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SendMessage(string message) {
            base.Channel.SendMessage(message);
        }
        
        public System.Threading.Tasks.Task SendMessageAsync(string message) {
            return base.Channel.SendMessageAsync(message);
        }
        
        public void SendRequestFriendship(int targetUserId) {
            base.Channel.SendRequestFriendship(targetUserId);
        }
        
        public System.Threading.Tasks.Task SendRequestFriendshipAsync(int targetUserId) {
            return base.Channel.SendRequestFriendshipAsync(targetUserId);
        }
        
        public void AddFriend(int friendshipRequestId) {
            base.Channel.AddFriend(friendshipRequestId);
        }
        
        public System.Threading.Tasks.Task AddFriendAsync(int friendshipRequestId) {
            return base.Channel.AddFriendAsync(friendshipRequestId);
        }
        
        public void RemoveFriend(int friendUserId) {
            base.Channel.RemoveFriend(friendUserId);
        }
        
        public System.Threading.Tasks.Task RemoveFriendAsync(int friendUserId) {
            return base.Channel.RemoveFriendAsync(friendUserId);
        }
        
        public void StartGame() {
            base.Channel.StartGame();
        }
        
        public System.Threading.Tasks.Task StartGameAsync() {
            return base.Channel.StartGameAsync();
        }
        
        public void UpdateGameSettings() {
            base.Channel.UpdateGameSettings();
        }
        
        public System.Threading.Tasks.Task UpdateGameSettingsAsync() {
            return base.Channel.UpdateGameSettingsAsync();
        }
        
        public void GetScoreboard() {
            base.Channel.GetScoreboard();
        }
        
        public System.Threading.Tasks.Task GetScoreboardAsync() {
            return base.Channel.GetScoreboardAsync();
        }
        
        public string CreateLobby() {
            return base.Channel.CreateLobby();
        }
        
        public System.Threading.Tasks.Task<string> CreateLobbyAsync() {
            return base.Channel.CreateLobbyAsync();
        }
        
        public void JoinLobby(string lobbyCode) {
            base.Channel.JoinLobby(lobbyCode);
        }
        
        public System.Threading.Tasks.Task JoinLobbyAsync(string lobbyCode) {
            return base.Channel.JoinLobbyAsync(lobbyCode);
        }
        
        public bool LoginUser(string username, string password) {
            return base.Channel.LoginUser(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> LoginUserAsync(string username, string password) {
            return base.Channel.LoginUserAsync(username, password);
        }
        
        public void LogoutUser() {
            base.Channel.LogoutUser();
        }
        
        public System.Threading.Tasks.Task LogoutUserAsync() {
            return base.Channel.LogoutUserAsync();
        }
        
        public int RegisterUser() {
            return base.Channel.RegisterUser();
        }
        
        public System.Threading.Tasks.Task<int> RegisterUserAsync() {
            return base.Channel.RegisterUserAsync();
        }
        
        public int RegisterGuest() {
            return base.Channel.RegisterGuest();
        }
        
        public System.Threading.Tasks.Task<int> RegisterGuestAsync() {
            return base.Channel.RegisterGuestAsync();
        }
        
        public void ChangePassword(string oldPassword, string newPassword) {
            base.Channel.ChangePassword(oldPassword, newPassword);
        }
        
        public System.Threading.Tasks.Task ChangePasswordAsync(string oldPassword, string newPassword) {
            return base.Channel.ChangePasswordAsync(oldPassword, newPassword);
        }
        
        public void RecoverPassword(string email) {
            base.Channel.RecoverPassword(email);
        }
        
        public System.Threading.Tasks.Task RecoverPasswordAsync(string email) {
            return base.Channel.RecoverPasswordAsync(email);
        }
        
        public void UpdateProfile() {
            base.Channel.UpdateProfile();
        }
        
        public System.Threading.Tasks.Task UpdateProfileAsync() {
            return base.Channel.UpdateProfileAsync();
        }
    }
}
